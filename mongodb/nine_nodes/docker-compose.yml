version: '3.7'

services:
  mongo_config1:
    image: mongo:4.2.12
    command: ["mongod", "--configsvr", "--replSet", "configReplSet", "--port", "27019"]
    ports:
      - 27019:27019
    volumes:
      - mongoConfig1:/data/configdb
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.config == 1

  mongo_config2:
    image: mongo:4.2.12
    command: ["mongod", "--configsvr", "--replSet", "configReplSet", "--port", "27020"]
    ports:
      - 27020:27020
    volumes:
      - mongoConfig2:/data/configdb
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.config == 2

  mongo_config3:
    image: mongo:4.2.12
    command: ["mongod", "--configsvr", "--replSet", "configReplSet", "--port", "27021"]
    ports:
      - 27021:27021
    volumes:
      - mongoConfig3:/data/configdb
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.config == 3
#the router is deployed only on the manager
  mongo_mongos:
    image: mongo:4.2.12
    command: ["mongos", "--configdb", "configReplSet/mongo_config1:27019,mongo_config2:27020,mongo_config3:27021", "--bind_ip_all"]
    ports:
      - 27017:27017
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  mongo_db1:
    image: mongo:4.2.12
    command: ["mongod", "--shardsvr", "--replSet", "shardReplSet1", "--port", "27018"]
    ports:
      - 27018:27018
    volumes:
      - mongoData1:/data/db
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.shard == 1

  mongo_db2:
    image: mongo:4.2.12
    command: ["mongod", "--shardsvr", "--replSet", "shardReplSet2", "--port", "27022"]
    ports:
      - 27022:27022
    volumes:
      - mongoData2:/data/db
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.shard == 2

  mongo_db3:
    image: mongo:4.2.12
    command: ["mongod", "--shardsvr", "--replSet", "shardReplSet3", "--port", "27023"]
    ports:
      - 27023:27023
    volumes:
      - mongoData3:/data/db
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.shard == 3

  mongo_db4:
    image: mongo:4.2.12
    command: ["mongod", "--shardsvr", "--replSet", "shardReplSet4", "--port", "27024"]
    ports:
      - 27024:27024
    volumes:
      - mongoData4:/data/db
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.shard == 4

  mongo_db5:
    image: mongo:4.2.12
    command: ["mongod", "--shardsvr", "--replSet", "shardReplSet5", "--port", "27025"]
    ports:
      - 27025:27025
    volumes:
      - mongoData5:/data/db
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.shard == 5

  mongo_db6:
    image: mongo:4.2.12
    command: ["mongod", "--shardsvr", "--replSet", "shardReplSet6", "--port", "27026"]
    ports:
      - 27026:27026
    volumes:
      - mongoData6:/data/db
    networks:
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.shard == 6

  mongo_express:
    image: mongo-express:0.54.0
    networks:
      - mongo-net
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=default
      - ME_CONFIG_MONGODB_SERVER=mongo_mongos
      - ME_CONFIG_MONGODB_PORT=27017
    ports:
      - "8081:8081"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      placement:
        constraints:
          - node.role == manager
    depends_on:
      - mongo_mongos

networks:
  mongo-net:
    driver: overlay

volumes:
  mongoConfig1:
  mongoConfig2:
  mongoConfig3:
  mongoData1:
  mongoData2:
  mongoData3:
  mongoData4:
  mongoData5:
  mongoData6:
